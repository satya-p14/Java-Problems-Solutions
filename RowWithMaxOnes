// Given a boolean 2D array, where each row is sorted. Find the row with the maximum number of 1s.

public static int RowWithMaxOnes(ArrayList<ArrayList<Integer>> A){
    int ans = 0;
    int i = 0;
    int N = A.size();
    int M = A.get(0).size();
    int j = M - 1;
    while (i < N){
        while ( j >= 0 && A.get(i).get(j) == 1){
            j--;
            ans = i;
        }
        i++;
    }
    return ans;
}

public static int RowWithMaxOnes_sol2(ArrayList<ArrayList<Integer>> A){
        int max_row_index = 0;
        int row = A.size();
        int col = A.get(0).size();
        int curr_col = col - 1;
        for (int i = 0; i < row; i++) {
            while (curr_col >= 0 && A.get(i).get(curr_col) == 1){
                curr_col--;
                max_row_index = i;
            }
        }
        return max_row_index;
    }
