// Given a collection of intervals, merge all overlapping intervals.

class Interval {
    int start;
    int end;   
    Interval(int s, int e) {
        start = s;
        end = e;
    }
}

public class Solution {    
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        ArrayList<Interval> output = new ArrayList<Interval>();
        if(intervals.size() < 2){
            return intervals;
        }
        Collections.sort(intervals,(a,b)-> Integer.compare(a.start,b.start));
        Interval tmp = intervals.get(0);
        int s = tmp.start;
        int e = tmp.end;
        for (int i = 1; i < intervals.size(); i++) {
            tmp = intervals.get(i);
            if(tmp.start <= e){
                e = Math.max(e,tmp.end);
            }else{
                output.add(new Interval(s,e));
                s = tmp.start;
                e = tmp.end;
            }
        }
        output.add(new Interval(s,e));
        return output;
    }
}
