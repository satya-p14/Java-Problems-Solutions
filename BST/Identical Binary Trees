Given two binary trees, write a function to check if they are equal or not.

Two binary trees are considered equal if they are structurally identical and the nodes have the same value.

Return  0 / 1  ( 0 for false, 1 for true ) for this problem


/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
  public int isSameTree(TreeNode A, TreeNode B) {
      ArrayList<Integer> treeA = new ArrayList();
      ArrayList<Integer> treeB = new ArrayList();
      Inorder(A, treeA);
      Inorder(B , treeB);
      if(treeA.equals(treeB)) return 1;
      return 0;
  }
  
  public void Inorder(TreeNode root , ArrayList<Integer> values){
      if(root == null) return ;
      Inorder(root.left , values);
      values.add(root.val);
      Inorder(root.right , values);        
  }
}
