Minimum Swaps
//    Given an array of integers A and an integer B, find and
//    return the minimum number of swaps required to bring all the numbers less than or equal to B together.
//    Note: It is possible to swap any two elements, not necessarily consecutive.

public static int MinimumSwaps(int[] A , int B){
        int ans = 0;
        int count_less_than_B = 0;
        for (int item : A) {
            if(item <= B){
                count_less_than_B++;
            }
        }
        int count_greater_than_B = 0;
        for (int i = 0; i < count_less_than_B; i++) {
            if(A[i] > B){
                count_greater_than_B++;
            }
        }
        ans = count_greater_than_B;
        for (int i = 0,j=count_less_than_B; j < A.length; i++,j++) {
            if(A[i] > B){
                count_greater_than_B--;
            }
            if(A[j] > B){
                count_greater_than_B++;
            }
            ans = Math.min(ans, count_greater_than_B);
        }
        return ans;
    }
