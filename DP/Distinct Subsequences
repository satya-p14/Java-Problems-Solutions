Given two sequences A and B, count number of unique ways in sequence A, to form a subsequence that is identical to the sequence B.
Subsequence : A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, "ACE" is a subsequence of "ABCDE" while "AEC" is not).


public class Solution {
    public int numDistinct(String A, String B) {
        int m = B.length(); // target
        int n = A.length(); // source
        if(m > n) return 0;
        int dp[][] = new int[m + 1][n + 1];
        for (int i = 1; i <= m; i++){
            dp[i][0] = 0;
        }
        for (int j = 0; j <= n; j++){
            dp[0][j] = 1;
        }
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (B.charAt(i - 1) != A.charAt(j - 1)){
                    dp[i][j] = dp[i][j - 1];
                }else{
                    dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1];
                }
            }
        }
        return dp[m][n];
    }
}
